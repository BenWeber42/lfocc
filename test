#!/usr/bin/env sh 

# configuration
TEST_SUFFIX="lang"
TEST_REFERENCE_COMPILATION_OUTPUT_SUFFIX="compile.out"
TEST_COMPILED_SUFFIX="compiled"
TEST_RUN_STDIN_SUFFIX="run.in"
TEST_RUN_REFERENCE_STDOUT_SUFFIX="run.out"
TEST_RUN_FAIL_SUFFIX="run.fail"

testcases="none"
single="no"

if [ $# -eq 0 ]
then
    echo "Doing all testcases."
    echo
    testcases=$(find tests -type f -name "*.$TEST_SUFFIX")

    # reset fails
    echo -n > fails
elif [ $1 = "fails" ]
then
    if [ -e fails ]
    then
        echo "Doing only failed testcases."
        echo
        testcases=$(cat fails)
    else
        echo "Couldn't find fails file! Doing all testcases."
        testcases=$(find tests -type f -name "*.$TEST_SUFFIX")
    fi

    # reset fails
    echo -n > fails
else
    single="yes"
    testcases=$1
    echo "Doing testcase $testcases."
    echo
fi

testcases=$(echo "$testcases" | sed "s/\.$TEST_SUFFIX$//" | sed "s/^\.\///")

pass=0
fail=0
total=0

# go over all testcases:
for testcase in $testcases
do

   language=$(echo $testcase | awk -F'/' '{ print $2 }')

   echo -n "Testcase $testcase ... "

   ret=0

   if [ -e $testcase.$TEST_REFERENCE_COMPILATION_OUTPUT_SUFFIX ]
   then
      if [ "FAIL" = "$(cat $testcase.$TEST_REFERENCE_COMPILATION_OUTPUT_SUFFIX)" ]
      then
          ret=255
      fi
   fi

   output=$(java -enableassertions -cp compilers/$language/bin lfocc.compilers.$language.Main $testcase.$TEST_SUFFIX $testcase.$TEST_COMPILED_SUFFIX 2>&1)

   exit=$?

   if [ $exit -ne $ret ]
   then
      echo "FAILURE (during compilation)!"
      echo
      echo "$output"
      echo
      fail=$((fail+1))
      if [ $single = "no" ]
      then
          echo $testcase >> fails
      fi
   elif [ $exit -eq 0 ]
   then

      input=""

      if [ -e $testcase.$TEST_RUN_STDIN_SUFFIX ]
      then
         input=$(cat $testcase.$TEST_RUN_STDIN_SUFFIX)
      fi

      output=$(echo "$input" | ./$testcase.$TEST_COMPILED_SUFFIX 2>&1)

      exit=$?

      if [ -e $testcase.$TEST_RUN_FAIL_SUFFIX -a $exit -eq 0 ]
      then

         echo "FAILURE (program ran, but should have crashed)!"
         fail=$((fail+1))
         if [ $single = "no" ]
         then
            echo $testcase >> fails
         fi

      elif [ $exit -ne 0 ]
      then

         echo "FAILURE (program crashed)!"
         if [ "$output" != "" ]
         then
            echo
            echo "$output"
            echo
         fi
         fail=$((fail+1))
         if [ $single = "no" ]
         then
            echo $testcase >> fails
         fi
         
      elif [ -e $testcase.$TEST_RUN_REFERENCE_STDOUT_SUFFIX ]
      then
         if [ "$output" != "$(cat $testcase.$TEST_RUN_REFERENCE_STDOUT_SUFFIX)" ]
         then

            echo "FAILURE (program gave wrong output)!"
            fail=$((fail+1))
            if [ $single = "no" ]
            then
               echo $testcase >> fails
            fi

         else
            echo "OK!"
            pass=$((pass+1))
         fi
      else
         echo "OK!"
         pass=$((pass+1))
      fi

   else
      echo "OK!"
      pass=$((pass+1))
   fi


   total=$((total+1))
done

echo
echo "Finished ($fail failed, $pass passed, $total in total)"
